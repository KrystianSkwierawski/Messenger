@model Application.ViewModel.HomeViewModel

@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{

    var _user = await UserManager.GetUserAsync(User);
    var _userId = _user?.Id;
}


@if (SignInManager.IsSignedIn(User))
{
    <div class="main__container" data-relatioshipid="" data-userid="@_userId">

        <div class="menu__container">
            <button class="fas fa-bars menu__button"></button>
            <h1 class="text-white menu__friend-name"></h1>
        </div>

        <div class="content__container">

            <div class="messages__container">

                @*<div class="message mt-3">
                    <img src="~/images/avatar.jpg" class="message__profile-picture rounded-circle" alt="friend avatar"/>
                    <div class="message__text-container">
                        <div class="information-about-the-message__container">
                            <h3 class="message__profile-name text-white ml-3 text-primary">szefnudy</h3>
                            <p class="message__date-sended ml-1 text-secondary">11/09/2020 15:55</p>
                        </div>

                        <div class="ml-3 text-white">
                            <p>jakis tekst....</p>
                        </div>
                    </div>
                </div>*@

            </div>

            <div class="input-to-send-messages__container mb-2 mt-1">
                <textarea class="input-to-send-messages p-1"></textarea>
            </div>

        </div>
    </div>
    <div class="side-menu__container d-none">

        <form class="form-inline justify-content-center md-form form-sm mt-0" onsubmit="return false">
            <input class="search-friends__input mt-4" type="text" placeholder="Search" aria-label="Search">
        </form>

        <div class="friends__container" data-relationships='@Json.Serialize(Model.RelationShips)'>

            @if (Model.Friends != null)
            {
                @foreach (var friend in Model.Friends)
                {
                    var relationShipWhereCurrentUserIsInvited = Model.RelationShips.FirstOrDefault(x => x.InvitedUserId == _userId && x.InvitingUserId == friend.Id);
                    var relationShipWhereCurrentUserIsInviting = Model.RelationShips.FirstOrDefault(x => x.InvitingUserId == _userId && x.InvitedUserId == friend.Id);


                    if (
                        (relationShipWhereCurrentUserIsInviting != null && relationShipWhereCurrentUserIsInviting.IsAccepted == true) ||
                        (relationShipWhereCurrentUserIsInvited != null && relationShipWhereCurrentUserIsInvited.IsAccepted == true)
                        )
                    {
                        <div class="friend__container" id="@friend.Id">
                            <button class="friend__details ml-3 mb-4">
                                <img src="~/images/avatar.jpg" class="friend__image rounded-circle" alt="friend avatar"/>
                                <h2 class="friend__name text-white ml-2 text-break">@friend.UserName</h2>
                            </button>
                        </div>
                    }
                    else if (relationShipWhereCurrentUserIsInvited != null && relationShipWhereCurrentUserIsInvited.IsAccepted == false)
                    {
                        <div class="friend__container" id="@friend.Id">
                            <div class="friend__request ml-3 mb-1">
                                <button class="fas fa-check text-success p-0 friend__accept-request btn btn-link"></button>
                                <button class="fas fa-times ml-2 text-danger p-0 friend__reject-request btn btn-link"></button>
                            </div>
                            <button disabled class="friend__details ml-3 mb-4">
                                <img src="~/images/avatar.jpg" class="friend__image rounded-circle" alt="friend avatar"/>
                                <h2 class="friend__name text-white ml-2 text-break">@friend.UserName</h2>
                            </button>
                        </div>
                    }
                }
            }

        </div>

        <div class="settings__container text-white">
            <button class="fas fa-user-plus add-friend__button ml-1 p-0" data-friends='@Json.Serialize(Model.Friends)' data-username="@_user.UserName"></button>


            <form class="" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="text-danger my-0 logout__button">Logout</button>
            </form>

            <button class="fas fa-user-cog settings__button mr-1 p-0"></button>
        </div>
    </div> }
else
{
    <ul>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    </ul>}


<script type="module" src="~/js/index.js"></script>